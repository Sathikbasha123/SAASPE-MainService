# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
  - develop

pr: none
pool:
  vmImage: ubuntu-latest

variables:
    major-minor: "develop.1.0"
    env: "dev"
    revision: $[ counter(variables['major-minor'],0) ]

stages:
  # - stage: Analyse
  #   # condition: eq(variables['env'], 'prod')
  #   jobs:
  #     - job: SonarQube
  #       steps:
  #         - task: SonarQubePrepare@5
  #           inputs:
  #             SonarQube: 'sonarqube-main-service'
  #             scannerMode: 'CLI'
  #             configMode: 'manual'
  #             cliProjectKey: 'SaasPe_saaspe-main-microservice_fc162e2b-5771-46f1-acdb-1a2b08be5d80'
  #             cliProjectName: 'saaspe-main-microservice'
  #             cliSources: '.'
  #             extraProperties: |
  #               # Additional properties that will be passed to the scanner, 
  #               # Put one key=value per line, example:
  #               # sonar.exclusions=**/*.bin
  #               sonar.java.binaries=.
  #         - task: SonarQubeAnalyze@5
  #           inputs:
  #             jdkversion: 'JAVA_HOME_17_X64'
  #       condition: eq(variables['env'], 'dev')
  
  - stage: "build"
    jobs:
      - job: build
        steps:
          - task: AzureCLI@2
            inputs:
              azureSubscription: 'saaspe-resource-connection'
              scriptType: 'pscore'
              scriptLocation: 'inlineScript'
              inlineScript: |
                az extension add --name azure-devops
                az pipelines variable-group variable list --group-id 1 --org "https://dev.azure.com/mindgraph" --project "SaasPe"
                az pipelines variable-group variable update --group-id 1 --name "dev" --value "$(major-minor).$(revision)" --org "https://dev.azure.com/mindgraph" --project "SaasPe"
            env:
              AZURE_DEVOPS_EXT_PAT: $(System.AccessToken)

            
          - task: Maven@3
            inputs:
              mavenPomFile: 'pom.xml'
              goals: 'clean install'
              publishJUnitResults: true
              testResultsFiles: '**/surefire-reports/TEST-*.xml'
              javaHomeOption: 'JDKVersion'
              mavenVersionOption: 'Default'
              mavenAuthenticateFeed: false
              effectivePomSkip: false
              sonarQubeRunAnalysis: false

             

          - task: Docker@2
            displayName: "Build image and publish to acr"
            inputs:
              containerRegistry: 'saaspe-public-hub'
              repository: 'saaspe-main'
              command: 'buildAndPush'
              Dockerfile: '**/Dockerfile'
              tags: |
                $(major-minor).$(revision)

          
          - task: CopyFiles@2
            inputs:
              SourceFolder: '$(System.DefaultWorkingDirectory)/manifests'
              Contents: '**/deployment.yml'  # Assuming your deployment YAML file is named deployment.yml
              TargetFolder: '$(Build.ArtifactStagingDirectory)/deployments' 
          - task: PublishBuildArtifacts@1
            inputs:
              PathtoPublish: '$(Build.ArtifactStagingDirectory)'
              ArtifactName: 'drop'      



          # - task: AzureCLI@2
          #   inputs:
          #     azureSubscription: 'saaspe-resource-connection'
          #     scriptType: 'pscore'
          #     scriptLocation: 'inlineScript'
          #     inlineScript: |
          #       $jenkinsUsername = "robot"
          #       $jenkinsApiToken = "118577899ae79563449a2093460eab76de"
          #       $param1 = '$(major-minor).$(revision)'
          #       $jenkinsUrlWithParams = "https://jenkins.saaspe.com/job/ms-$(env)/job/saaspe-main-microservice/job/main-microservice-deployment/buildWithParameters?VERSION=$param1"
          #       Invoke-RestMethod -Uri $jenkinsUrlWithParams -Headers @{Authorization = 'Basic ' + [Convert]::ToBase64String([Text.Encoding]::ASCII.GetBytes("$($jenkinsUsername):$($jenkinsApiToken)"))} -Method Post
          #   condition: or(eq(variables['env'], 'dev'), eq(variables['env'], 'sit'), eq(variables['env'], 'prod'))
              
